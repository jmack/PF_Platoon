const fs = require('fs');
const tictacs = require('./tictacs.json').tictacs;

/*
 * Helpers
 */
const transportGroupMap = {
  item: {
    containerName: "TransportItems",
    className: "name",
  },
  magazine: {
    containerName: "TransportMagazines",
    className: "magazine",
  },
  weapon: {
    containerName: "TransportWeapons",
    className: "weapon",
  },
}

const generateTransportGroup = (tictac, groupType) => {
  if (!transportGroupMap[groupType]) {
    throw new Error(`    Transport Group ${groupType} does not have a mapping`);
  }

  const containerName = transportGroupMap[groupType].containerName;
  const className = transportGroupMap[groupType].className;

  const groupItems = tictac.contents.filter(item => item.type === groupType);
  if (!groupItems.length) {
    return '';
  }

  console.log(`    Creating ${containerName}`);
  let transportGroupString = `\n    class ${containerName}\n    {`;

  groupItems.forEach(item => {
    console.log(`      ${item.count}x ${item.class}`);
    transportGroupString += `\n      class _xx_${item.class} { ${className} = "${item.class}"; count = ${item.count}; };`
  });

  transportGroupString += '\n    };';
  return transportGroupString;
};

/*
 * Main
 */
console.log('Beginning TicTac Converter');

let unitsExportString = "";
let mainClassesString = "";
let moduleClassesString = "";

// for each tictac
tictacs.forEach(tictac => {
  console.log(`  Generating ${tictac.name} Tic Tac`);
  const sanitizedName = `${tictac.name.replaceAll(' ', '_')}`;
  const tictacName = `PF_TicTac_${sanitizedName}`;
  const podName = `pf_pod_${sanitizedName.toLocaleLowerCase()}`;

  // Units Export String
  unitsExportString += `\n      "${tictacName}",`;

  // Main Class String
  mainClassesString +=
    `\n` +
    `\n  class ${tictacName} : PF_TicTac_Empty` +
    `\n  {` +
    `\n    scope = 2;` +
    `\n    displayName = "[PF] Supply Pod (${tictac.name})";`;

  if (tictac.texture) {
    mainClassesString +=
      `\n    hiddenSelectionsTextures[] =` +
      `\n    {` +
      `\n      "${tictac.texture}",` +
      `\n    };`;
  }

  if (tictac.preview) {
    mainClassesString += `\n    editorPreview = "${tictac.preview}";`;
  }

  mainClassesString += generateTransportGroup(tictac, 'item');
  mainClassesString += generateTransportGroup(tictac, 'magazine');
  mainClassesString += generateTransportGroup(tictac, 'weapon');
  mainClassesString += `\n  };`;

  // Module Class String
  moduleClassesString += `\n          class ${podName}` +
    `\n          {` +
    `\n            name = "[PF] Supply Pod (${tictac.name})";` +
    `\n            value = "${tictacName}";` +
    `\n          };`;
});

// Write to file
let template = fs.readFileSync('./PF_Gear/tictacs/config.cpp.tpl').toString();

template = template.replace('%autogenerateWarning%', 'AUTOGENERATED FILE. Edit config.cpp.tpl or tictacs.json instead. This file will be overwritten by the build script.');
template = template.replace('%unitExports%', unitsExportString);
template = template.replace('%mainClasses%', mainClassesString);
template = template.replace('%moduleClasses%', moduleClassesString);

try {
  fs.writeFileSync('./PF_Gear/tictacs/config.cpp', template);
} catch (err) {
  console.error(err);
};

console.log('TicTac converter completed!');